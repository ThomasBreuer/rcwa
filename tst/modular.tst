#############################################################################
##
#W  modular.tst                GAP4 Package `RCWA'                Stefan Kohl
##
#H  @(#)$Id$
##

gap> START_TEST("$Id$");
gap> R := PolynomialRing(GF(2),1);;
gap> x := IndeterminatesOfPolynomialRing(R)[1];; SetName(x,"x");;
gap> e := One(GF(2));; z := Zero(R);;
gap> r := ModularRcwaMapping( 2, x^2 + e,
>                             [ [ x^2 + x + e, z      , x^2 + e ],
>                               [ x^2 + x + e, x      , x^2 + e ],
>                               [ x^2 + x + e, x^2    , x^2 + e ],
>                               [ x^2 + x + e, x^2 + x, x^2 + e ] ] );
<rcwa mapping of GF(2)[x], with modulus Z(2)^0+x^2>
gap> One(r);
<identity rcwa mapping of GF(2)[x]>
gap> Zero(r);
<zero rcwa mapping of GF(2)[x]>
gap> Display(One(r));
Identity rcwa mapping of GF(2)[x]
gap> Display(Zero(r));
Zero rcwa mapping of GF(2)[x]
gap> Display(r);

Rcwa mapping of GF(2)[x], with modulus Z(2)^0+x^2

      P mod Z(2)+x^2      |                        P^f
--------------------------+---------------------------------------------------
 0*Z(2)                   | (Z(2)+x+x^2)*P/(Z(2)+x^2)
 Z(2)                     | ((Z(2)+x+x^2)*P + x)/(Z(2)+x^2)
 x                        | ((Z(2)+x+x^2)*P + x^2)/(Z(2)+x^2)
 Z(2)+x                   | ((Z(2)+x+x^2)*P + x+x^2)/(Z(2)+x^2)

gap> Print(r,"\n");
ModularRcwaMapping( 2, Z(2)^0+x^2, [ [ Z(2)^0+x+x^2, 0*Z(2), Z(2)^0+x^2 ], 
  [ Z(2)^0+x+x^2, x, Z(2)^0+x^2 ], [ Z(2)^0+x+x^2, x^2, Z(2)^0+x^2 ], 
  [ Z(2)^0+x+x^2, x+x^2, Z(2)^0+x^2 ] ] )
gap> IsBijective(r);
true
gap> (x^2+x+One(R))^r;
Z(2)^0+x^2
gap> PreImage(r,last);
Z(2)^0+x+x^2
gap> r*r^-1 = One(r);
true
gap> r^-1*r = One(r);
true
gap> r^2;
<bijective rcwa mapping of GF(2)[x], with modulus Z(2)^0+x^4>
gap> r+r = Zero(r);
true
gap> -r = r;
true
gap> Modulus(r);
Z(2)^0+x^2
gap> Coefficients(r) = [ [ Z(2)^0+x+x^2, Zero(R), Z(2)^0+x^2 ],
>                        [ Z(2)^0+x+x^2, x, Z(2)^0+x^2 ], 
>                        [ Z(2)^0+x+x^2, x^2, Z(2)^0+x^2 ],
>                        [ Z(2)^0+x+x^2, x+x^2, Z(2)^0+x^2 ] ];
true
gap> PrimeSet(r) = [ Z(2)^0+x, Z(2)^0+x+x^2 ];
true
gap> Multiplier(r);
Z(2)^0+x+x^2
gap> Divisor(r);
Z(2)^0+x^2
gap> IsOne(One(r));
true
gap> G := Group(r);
<rcwa group over GF(2)[x] with 1 generator>
gap> T := TrivialSubgroup(G);
<trivial rcwa group over GF(2)[x]>
gap> Display(TrivialSubgroup(G));
Trivial rcwa group over GF(2)[x]
gap> Size(T);
1
gap> Display(G);

Rcwa group over GF(2)[x], generated by

[

Bijective rcwa mapping of GF(2)[x], with modulus Z(2)^0+x^2

      P mod Z(2)+x^2      |                        P^f
--------------------------+---------------------------------------------------
 0*Z(2)                   | (Z(2)+x+x^2)*P/(Z(2)+x^2)
 Z(2)                     | ((Z(2)+x+x^2)*P + x)/(Z(2)+x^2)
 x                        | ((Z(2)+x+x^2)*P + x^2)/(Z(2)+x^2)
 Z(2)+x                   | ((Z(2)+x+x^2)*P + x+x^2)/(Z(2)+x^2)

]

gap> orb6 := ShortOrbits(G,Set(AllGFqPolynomialsModDegree(2,6,x)),20);;
gap> List(orb6,Length);
[ 1, 1, 1, 1, 2, 2, 4, 4, 4, 4, 4, 4, 8, 8, 8, 8 ]
gap> s := RcwaMapping(2,x,[[One(R),Zero(R),One(R)],[x,Zero(R),One(R)]]);
<rcwa mapping of GF(2)[x], with modulus x>
gap> SetName(s,"s");
gap> Display(s);
 
Rcwa mapping of GF(2)[x], with modulus x
 
         P mod x          |                        P^s
--------------------------+---------------------------------------------------
 0*Z(2)                   | P
 Z(2)                     | (x)*P

gap> r*(s^r)*r^-1 = s;  # Does not work in 4.2.
true
gap> STOP_TEST( "modular.tst", 160000000 );

#############################################################################
##
#E  modular.tst . . . . . . . . . . . . . . . . . . . . . . . . .  ends here